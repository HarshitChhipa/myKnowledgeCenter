This file contains all my new finding about JS.
--> There is a function to check and array same as php named as isArray.

https://medium.com/dailyjs/better-array-check-with-array-isarray-dae0283263be


==> What is memoization.

Memoization is the process of caching the output of function calls so that subsequent calls are faster. 
Calling the function again with the same input will return the cached output without needing to do the calculation again.
A basic implementation in JavaScript looks like this:

const memoize = fn => {
  const cache = new Map()
  return value => {
    const cachedResult = cache.get(value)
    if (cachedResult !== undefined) return cachedResult
    const result = fn(value)
    cache.set(value, result)
    return result
  }
}

############################################################################ NEW FINDINGS ###################################

What is the purpose of callback function as an argument of setState?

The callback function is invoked when setState has finished and the component gets rendered. 
Since setState is asynchronous, the callback function is used for any post action.

setState({ name: "Harshit" }, () => {
  console.log("The name has updated and component re-rendered")
})

Extra
The callback function is invoked after setState finishes and is used for any post action.
It is recommended to use lifecycle method rather this callback function.

################################################################################# ENDS HERE ##################################
